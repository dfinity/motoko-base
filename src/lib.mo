
import Array_ "Array";
import AssocList_ "AssocList";
import Blob_ "Blob";
import Bool_ "Bool";
import Buffer_ "Buffer";
import CertifiedData_ "CertifiedData";
import Char_ "Char";
import Debug_ "Debug";
import Deque_ "Deque";
import Error_ "Error";
import ExperimentalCycles_ "ExperimentalCycles";
import ExperimentalInternetComputer_ "ExperimentalInternetComputer";
import ExperimentalStableMemory_ "ExperimentalStableMemory";
import Float_ "Float";
import Func_ "Func";
import Hash_ "Hash";
import HashMap_ "HashMap";
import Heap_ "Heap";
import Int_ "Int";
import Int16_ "Int16";
import Int32_ "Int32";
import Int64_ "Int64";
import Int8_ "Int8";
import Iter_ "Iter";
import IterType_ "IterType";
import List_ "List";
import Nat_ "Nat";
import Nat16_ "Nat16";
import Nat32_ "Nat32";
import Nat64_ "Nat64";
import Nat8_ "Nat8";
import None_ "None";
import Option_ "Option";
import Order_ "Order";
import Prelude_ "Prelude";
import Principal_ "Principal";
import RBTree_ "RBTree";
import Random_ "Random";
import Result_ "Result";
import Stack_ "Stack";
import Text_ "Text";
import Time_ "Time";
import Trie_ "Trie";
import TrieMap_ "TrieMap";
import TrieSet_ "TrieSet";

module Base {
  public let Array = Array_;
  public let AssocList = AssocList_;
  public let Blob = Blob_;
  public let Bool = Bool_;
  public let Buffer = Buffer_;
  public let CertifiedData = CertifiedData_;
  public let Char = Char_;
  public let Debug = Debug_;
  public let Deque = Deque_;
  public let Error = Error_;
  public let ExperimentalCycles = ExperimentalCycles_;
  public let ExperimentalInternetComputer = ExperimentalInternetComputer_;
  public let ExperimentalStableMemory = ExperimentalStableMemory_;
  public let Float = Float_;
  public let Func = Func_;
  public let Hash = Hash_;
  public let HashMap = HashMap_;
  public let Heap = Heap_;
  public let Int = Int_;
  public let Int16 = Int16_;
  public let Int32 = Int32_;
  public let Int64 = Int64_;
  public let Int8 = Int8_;
  public let Iter = Iter_;
  public let IterType = IterType_;
  public let List = List_;
  public let Nat = Nat_;
  public let Nat16 = Nat16_;
  public let Nat32 = Nat32_;
  public let Nat64 = Nat64_;
  public let Nat8 = Nat8_;
  public let None = None_;
  public let Option = Option_;
  public let Order = Order_;
  public let Prelude = Prelude_;
  public let Principal = Principal_;
  public let RBTree = RBTree_;
  public let Random = Random_;
  public let Result = Result_;
  public let Stack = Stack_;
  public let Text = Text_;
  public let Time = Time_;
  public let Trie = Trie_;
  public let TrieMap = TrieMap_;
  public let TrieSet = TrieSet_;
}
